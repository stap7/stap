STAP4 (Simple Task-Actor Protocol 4 basic directives: _task, _W, _i, _ix)


TASK->ACTOR protocol                                                                    //task commands and updates to virtual display
{"_task":{("good")|("bad"):{(<<key>>:<<number>>|<<text>>,)*}}}                          //may be sent once before task begins; goal values, e.g. {"good":{<<key>>:"correct"}} means that the <<key>>="correct" condition is a goal-state, {"bad":{<<key>>:"incorrect"}} means that the <<key>>="incorrect" is a condition to avoid, {"good":{<<key>>:1}} means <<key>> values closer to 1.0 are better, {"good":{<<key>>:"+"}} means higher numbers are better, {"good":{<<key>>:"-"}} means lower numbers are better
{(<<wait>>,)? (<<displayUpdate>>,)*}


ACTOR->TASK protocol                                                                    //participant response
{<<buttonKey>>:{<<buttonText>>:3}}                                                      //the number 3 signifies a click
{<<textInputKey>>:<<text>>}                                                             //<<text>> is the new value of the textbox
{<<waitID>>:0}                                                                          //this is sent in response to a <<wait>> request to signify that the [virtual or real] wait timer has expired



<<wait>>::=             "_W":<<number>>                                                 //wait <<number>> of seconds before processing rest of display updates
<<wait>>::=             "_W":{<<waitID>>:<<number>>}                                    //wait <<number>> of seconds, then process rest of display updates and respond to server with: {<<waitID>>:0}
<<displayUpdate>>::=    <<key>>:<<state>>|<<text>>|<<number>>|(null)                    //null signifies key deletion
<<displayUpdate>>::=    <<buttonsKey>>:{"_i":{} (,<<buttonText>>:1)*}                   //button panel
<<displayUpdate>>::=    <<textInputKey>>:{"_ix":{}}                                     //text input
<<state>>::=            {(<<displayUpdate>>,)*}
<<waitID>>::=           <<key>>
<<textInputKey>>::=     <<key>>
<<buttonsKey>>::=       <<key>>
<<buttonText>>::=       <<key>>
<<text>>::=             ** legal JSON text string **
<<number>>::=           ** legal JSON numeric value **
<<key>>::=              ** legal JSON string that does not begin with "_"; empty string not allowed; if key string begins with #, it is hidden **
